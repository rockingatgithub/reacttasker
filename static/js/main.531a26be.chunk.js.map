{"version":3,"sources":["components/Task.js","actions/index.js","components/AddTask.js","components/TaskList.js","components/User.js","components/FirstOption.js","components/SecondOption.js","components/Navbar.js","components/App.js","reducers/index.js","index.js"],"names":["Task","props","handleTask","task","dispatch","type","deleteTask","this","ListItem","ListItemAvatar","Avatar","ListItemText","primary","id","title","completed","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","Component","AddTask","titleHandler","e","setState","target","value","taskCompleted","taskNotCompleted","handleAddTask","state","userId","addTask","style","marginTop","FormControl","TextField","required","label","onChange","aria-describedby","variant","component","marginLeft","FormLabel","RadioGroup","name","row","FormControlLabel","control","Radio","Button","connect","tasks","TaskList","openForm","showForm","a","temp","fetch","then","res","json","console","log","list","Grid","item","xs","md","Typography","List","map","key","User","componentDidMount","firebase","signInWithEmailAndPassword","email","password","catch","error","userProfile","userProfileChange","passwordHandler","saveForm","length","alert","currentUser","user","updatePassword","logoutHandler","self","signOut","container","direction","justify","FirstOption","SecondOption","Navbar","optionHandler1","option1Selected","option2Selected","optionHandler2","homeHandler","isHomeSelected","isTaskSelected","isUserSelected","isHome","isTask","isUser","taskHandler","userHandler","showDropdown","showInformation","width","AppBar","position","color","Toolbar","spacing","InputLabel","Select","labelId","MenuItem","App","emailHandler","userEmail","userPassword","authhandler","createUserWithEmailAndPassword","signinhandler","setPersistence","Auth","Persistence","SESSION","showNavBar","isLoggedIn","isLoggedOut","alignitems","wrap","FormHelperText","connectedComponent","initialTaskState","combineReducers","action","filteredArray","filter","store","createStore","rootReducer","applyMiddleware","getState","next","thunk","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.531a26be.chunk.js","sourcesContent":["// ================================================individual task item===========================================\r\n\r\nimport React, { Component } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { deleteTask } from \"../actions\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nclass Task extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleTask = () => {\r\n    const { task } = this.props;\r\n    this.props.dispatch(deleteTask(task));\r\n  };\r\n\r\n  render() {\r\n    const { task } = this.props;\r\n    return (\r\n      <div>\r\n        <ListItem>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <FolderIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary={task.id} />\r\n          <ListItemText primary={task.title} />\r\n          <ListItemText primary={task.completed ? \"True\" : \"False\"} />\r\n          <ListItemSecondaryAction>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"delete\"\r\n              onClick={this.handleTask}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","export const ALL_TASK = \"ALL_TASK\";\r\nexport const ADD_TASK = \"ADD_TASK\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const SIGN_IN = \"SIGN_IN\";\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\n\r\nexport function allTaskList() {\r\n  return async function (dispatch) {\r\n    let temp = [];\r\n    await fetch(\"https://jsonplaceholder.typicode.com/todos\").then(\r\n      async (res) => {\r\n        temp = await res.json();\r\n        console.log(temp);\r\n      }\r\n    );\r\n    dispatch(addTaskList(temp));\r\n  };\r\n}\r\n\r\nexport function addTaskList(tasks) {\r\n  return {\r\n    type: ALL_TASK,\r\n    tasks,\r\n  };\r\n}\r\n\r\nexport function signInUser() {\r\n  return {\r\n    type: SIGN_IN,\r\n  };\r\n}\r\n\r\nexport function signOutUser() {\r\n  return {\r\n    type: SIGN_OUT,\r\n  };\r\n}\r\n\r\nexport function deleteTask(task) {\r\n  return {\r\n    type: DELETE_TASK,\r\n    task,\r\n  };\r\n}\r\n\r\nexport function addTask(task) {\r\n  return {\r\n    type: ADD_TASK,\r\n    task,\r\n  };\r\n}\r\n","// ====================================================the add task form===============================================\r\n\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { addTask } from \"../actions\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AddTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      completed: false,\r\n    };\r\n  }\r\n\r\n  titleHandler = (e) => {\r\n    this.setState({\r\n      title: e.target.value,\r\n    });\r\n  };\r\n\r\n  taskCompleted = () => {\r\n    this.setState({\r\n      completed: true,\r\n    });\r\n  };\r\n\r\n  taskNotCompleted = () => {\r\n    this.setState({\r\n      completed: false,\r\n    });\r\n  };\r\n\r\n  handleAddTask = () => {\r\n    const { title, completed } = this.state;\r\n    let self = this;\r\n    const task = {\r\n      userId: 1,\r\n      id: \"NewTask\",\r\n      title: title,\r\n      completed: completed,\r\n    };\r\n    this.props.dispatch(addTask(task));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <FormControl>\r\n          <TextField\r\n            required\r\n            id=\"outlined-required\"\r\n            type=\"text\"\r\n            label=\"Enter the task title\"\r\n            onChange={this.titleHandler}\r\n            aria-describedby=\"my-helper-text\"\r\n            variant=\"outlined\"\r\n          />\r\n        </FormControl>\r\n        <FormControl component=\"fieldset\" style={{ marginLeft: \"20px\" }}>\r\n          <FormLabel component=\"legend\">Status</FormLabel>\r\n          <RadioGroup aria-label=\"status\" name=\"status1\" row>\r\n            <FormControlLabel\r\n              value=\"true\"\r\n              control={<Radio />}\r\n              label=\"Completed\"\r\n              onChange={this.taskCompleted}\r\n            />\r\n            <FormControlLabel\r\n              value=\"false\"\r\n              control={<Radio />}\r\n              label=\"Not Completed\"\r\n              onChange={this.taskNotCompleted}\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <Button variant=\"default\" onClick={this.handleAddTask}>\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ tasks }) {\r\n  return {\r\n    tasks,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddTask);\r\n","// ========================================tasklist component================================================\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { allTaskList } from \"../actions\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Task from \"./Task\";\r\nimport AddTask from \"./AddTask\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nclass TaskList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showForm: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(allTaskList());\r\n  }\r\n\r\n  openForm = () => {\r\n    this.setState({\r\n      showForm: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { tasks } = this.props;\r\n    const { list } = tasks;\r\n    return (\r\n      <div>\r\n        <Button onClick={this.openForm} variant=\"contained\">\r\n          {\" \"}\r\n          ADD TASK{\" \"}\r\n        </Button>\r\n        {this.state.showForm && (\r\n          <AddTask tasks={tasks} dispatch={this.props.dispatch} />\r\n        )}\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Typography variant=\"h6\">All Tasks</Typography>\r\n          <div>\r\n            <List>\r\n              \r\n                \r\n              \r\n            </List>\r\n          </div>\r\n        </Grid>\r\n\r\n        <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n          {list.map((task) => (\r\n            <Task key={task.id} task={task} dispatch={this.props.dispatch} />\r\n          ))}\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ tasks }) {\r\n  return {\r\n    tasks,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(TaskList);\r\n","// ===============================the user component=================================================================\r\n\r\nimport React, { Component } from \"react\";\r\nimport * as firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport { Button, Grid, Typography, TextField } from \"@material-ui/core\";\r\nimport { signOutUser } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userProfile: true,\r\n      userProfileChange: false,\r\n      password: this.props.password,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.props.email, this.props.password)\r\n      .then(function () {\r\n        console.log(\"signed in\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"error\");\r\n      });\r\n  };\r\n\r\n  openForm = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.props.email, this.props.password)\r\n      .then(function () {\r\n        console.log(\"signed in\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"error\");\r\n      });\r\n    this.setState({\r\n      userProfile: false,\r\n      userProfileChange: true,\r\n    });\r\n  };\r\n\r\n  passwordHandler = (e) => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  saveForm = async () => {\r\n    const { password } = this.state;\r\n\r\n    if (password.length < 6) {\r\n      alert(\"Password must be 6 characters long\");\r\n      return;\r\n    }\r\n\r\n    await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.props.email, this.props.password)\r\n      .then(function () {\r\n        console.log(\"signed in\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"error\");\r\n      });\r\n\r\n    let user = await firebase.auth().currentUser;\r\n\r\n    await user\r\n      .updatePassword(password)\r\n      .then(function () {\r\n        alert(\"Password changed successfully\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  logoutHandler = () => {\r\n    let self = this;\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(function () {\r\n        self.props.dispatch(signOutUser());\r\n        console.log(\"signed out\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"error\", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { userProfile, userProfileChange } = this.state;\r\n    return (\r\n      <div>\r\n        {userProfile && (\r\n          <Grid container direction=\"column\">\r\n            <Grid item>\r\n              <Typography variant=\"h5\" component=\"h6\">\r\n                Username: {this.props.email}\r\n              </Typography>\r\n\r\n              <Typography\r\n                variant=\"h5\"\r\n                component=\"h6\"\r\n                style={{ marginTop: \"20px\" }}\r\n              >\r\n                Password: {this.props.password}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item style={{ marginTop: \"20px\" }}>\r\n              <Button variant=\"contained\" onClick={this.openForm}>\r\n                Change Password\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={this.logoutHandler}\r\n                style={{ marginLeft: \"10px\" }}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        {userProfileChange && (\r\n          <Grid container direction=\"column\" justify=\"center\">\r\n            <Grid item>\r\n              <Typography variant=\"h5\" component=\"h6\">\r\n                Username: {this.props.email}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h5\"\r\n                component=\"h6\"\r\n                style={{ marginTop: \"20px\" }}\r\n              >\r\n                Password:\r\n                <TextField\r\n                  required\r\n                  id=\"outlined-required\"\r\n                  type=\"password\"\r\n                  label=\"Enter Your Password\"\r\n                  onChange={this.passwordHandler}\r\n                  aria-describedby=\"my-helper-text\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item style={{ marginTop: \"20px\" }}>\r\n              <Button variant=\"contained\" onClick={this.saveForm}>\r\n                Save Password\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={this.logoutHandler}\r\n                style={{ marginLeft: \"10px\" }}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ tasks }) {\r\n  return {\r\n    tasks,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(User);\r\n","import React from \"react\";\r\n\r\nfunction FirstOption(props) {\r\n  return (\r\n    <div>\r\n      <h3>First option selected.</h3>\r\n      <p>\r\n        Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy text ever\r\n        since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book. It has survived not only five\r\n        centuries, but also the leap into electronic typesetting, remaining\r\n        essentially unchanged. It was popularised in the 1960s with the release\r\n        of Letraset sheets containing Lorem Ipsum passages, and more recently\r\n        with desktop publishing software like Aldus PageMaker including versions\r\n        of Lorem Ipsum.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FirstOption;\r\n","import React from \"react\";\r\n\r\nfunction SecondOption(props) {\r\n  return (\r\n    <div>\r\n      <h3>Second option selected.</h3>\r\n      <p>\r\n        Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy text ever\r\n        since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book. It has survived not only five\r\n        centuries, but also the leap into electronic typesetting, remaining\r\n        essentially unchanged. It was popularised in the 1960s with the release\r\n        of Letraset sheets containing Lorem Ipsum passages, and more recently\r\n        with desktop publishing software like Aldus PageMaker including versions\r\n        of Lorem Ipsum.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SecondOption;\r\n","// ======================================the navbar component===============================================\r\n\r\nimport {\r\n  AppBar,\r\n  Grid,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  Toolbar,\r\n  Button,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TaskList from \"./TaskList\";\r\nimport User from \"./User\";\r\nimport FirstOption from \"./FirstOption\";\r\nimport SecondOption from \"./SecondOption\";\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showDropdown: true,\r\n      showInformation: true,\r\n      isHomeSelected: true,\r\n      isTaskSelected: false,\r\n      isUserSelected: false,\r\n      isHome: true,\r\n      isTask: false,\r\n      isUser: false,\r\n      option1Selected: true,\r\n      option2Selected: false,\r\n    };\r\n  }\r\n\r\n  optionHandler1 = () => {\r\n    this.setState({\r\n      option1Selected: true,\r\n      option2Selected: false,\r\n    });\r\n  };\r\n\r\n  optionHandler2 = () => {\r\n    this.setState({\r\n      option1Selected: false,\r\n      option2Selected: true,\r\n    });\r\n  };\r\n\r\n  homeHandler = () => {\r\n    this.setState({\r\n      isHomeSelected: true,\r\n      isTaskSelected: false,\r\n      isUserSelected: false,\r\n      isHome: true,\r\n      isTask: false,\r\n      isUser: false,\r\n    });\r\n  };\r\n\r\n  taskHandler = () => {\r\n    this.setState({\r\n      isHomeSelected: false,\r\n      isTaskSelected: true,\r\n      isUserSelected: false,\r\n      isHome: false,\r\n      isTask: true,\r\n      isUser: false,\r\n    });\r\n  };\r\n\r\n  userHandler = () => {\r\n    this.setState({\r\n      isHomeSelected: false,\r\n      isTaskSelected: false,\r\n      isUserSelected: true,\r\n      isHome: false,\r\n      isTask: false,\r\n      isUser: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isHomeSelected,\r\n      isTaskSelected,\r\n      isUserSelected,\r\n      isHome,\r\n      option1Selected,\r\n      option2Selected,\r\n      isTask,\r\n      isUser,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <Grid container>\r\n          <Grid item style={{ width: \"100%\" }}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n              <Toolbar>\r\n                <Grid container spacing={4}>\r\n                  <Grid item>\r\n                    <Typography onClick={this.homeHandler} variant=\"h5\">\r\n                      Home\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography onClick={this.taskHandler} variant=\"h5\">\r\n                      Tasks\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography onClick={this.userHandler} variant=\"h5\">\r\n                      User\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Toolbar>\r\n            </AppBar>\r\n\r\n            {isHome && (\r\n              <div id=\"navbox\" style={{ marginTop: \"20px\" }}>\r\n                <Grid container>\r\n                  <Grid item>\r\n                    <FormControl variant=\"outlined\" id=\"my-form\">\r\n                      <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                        DropDown\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                      >\r\n                        <MenuItem onClick={this.optionHandler1} value=\"10\">\r\n                          Option1\r\n                        </MenuItem>\r\n                        <MenuItem onClick={this.optionHandler2} value=\"20\">\r\n                          Option2\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n                {option1Selected && <FirstOption />}\r\n                {option2Selected && <SecondOption />}\r\n              </div>\r\n            )}\r\n\r\n            {isTask && (\r\n              <div id=\"navbox\" style={{ marginTop: \"20px\" }}>\r\n                <Grid container>\r\n                  <Grid item>\r\n                    <TaskList dispatch={this.props.dispatch} />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            )}\r\n\r\n            {isUser && (\r\n              <div id=\"navbox\" style={{ marginTop: \"20px\" }}>\r\n                <Grid container>\r\n                  <Grid item>\r\n                    <User\r\n                      email={this.props.email}\r\n                      password={this.props.password}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ tasks }) {\r\n  return {\r\n    tasks,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","// =================================entry point of our app===========================================================\n\nimport React, { Component } from \"react\";\nimport {\n  Button,\n  Grid,\n  FormControl,\n  Input,\n  InputLabel,\n  FormHelperText,\n  TextField,\n  Paper,\n  AppBar,\n  Typography,\n  Toolbar,\n  Link,\n} from \"@material-ui/core\";\nimport * as firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport { connect } from \"react-redux\";\nimport Navbar from \"./Navbar\";\nimport { signInUser } from \"../actions\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userEmail: \"\",\n      userPassword: \"\",\n      showNavBar: false,\n    };\n  }\n\n  componentDidMount = () => {\n    let self = this;\n    console.log(self.props);\n  };\n\n  emailHandler = (e) => {\n    this.setState({\n      userEmail: e.target.value,\n    });\n  };\n\n  passwordHandler = (e) => {\n    this.setState({\n      userPassword: e.target.value,\n    });\n  };\n\n  authhandler = () => {\n    const { userEmail, userPassword } = this.state;\n\n    if (userPassword.length < 6) {\n      alert(\"Password must be 6 characters long!\");\n      return;\n    }\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(userEmail, userPassword)\n      .then(this.signinhandler)\n      .catch(function (error) {\n        console.log(\"error\", error);\n      });\n  };\n\n  signinhandler = () => {\n    let self = this;\n    const { userEmail, userPassword } = this.state;\n    firebase\n      .auth()\n      .setPersistence(firebase.auth.Auth.Persistence.SESSION)\n      .then(function () {\n        return firebase\n          .auth()\n          .signInWithEmailAndPassword(userEmail, userPassword)\n          .then(function () {\n            self.props.dispatch(signInUser());\n          })\n          .catch(function (error) {\n            alert(\"Invalid user id password\");\n          });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  render() {\n    const { userEmail, userPassword } = this.state;\n    const { isLoggedIn, isLoggedOut } = this.props.tasks;\n    return (\n      <div>\n        {isLoggedOut && (\n          <Grid container direction=\"column\" justify=\"center\" spacing={2}>\n            <AppBar position=\"static\" alignitems=\"center\" color=\"primary\">\n              <Toolbar>\n                <Grid container justify=\"center\" wrap=\"wrap\">\n                  <Grid item>\n                    <Typography variant=\"h6\">REACTTASKER</Typography>\n                  </Grid>\n                </Grid>\n              </Toolbar>\n            </AppBar>\n          </Grid>\n        )}\n\n        {isLoggedOut && (\n          <Grid\n            item\n            spacing={2}\n            direction=\"column\"\n            justify=\"center\"\n            style={{ marginTop: \"20px\" }}\n          >\n            <Grid item>\n              <Typography component=\"h1\" variant=\"h5\">\n                Sign in\n              </Typography>\n            </Grid>\n            <FormControl>\n              <TextField\n                required\n                id=\"outlined-required\"\n                type=\"email\"\n                label=\"Enter Your Email/Username\"\n                onChange={this.emailHandler}\n                aria-describedby=\"my-helper-text\"\n                variant=\"outlined\"\n              />\n              <FormHelperText id=\"my-helper-text\">\n                We'll never share your email.\n              </FormHelperText>\n            </FormControl>\n            <FormControl>\n              <TextField\n                required\n                label=\"Enter Your Password\"\n                type=\"password\"\n                id=\"my-input-password\"\n                onChange={this.passwordHandler}\n                aria-describedby=\"my-helper-text\"\n                variant=\"outlined\"\n              />\n            </FormControl>\n            <Button variant=\"contained\" onClick={this.signinhandler}>\n              Signin\n            </Button>\n          </Grid>\n        )}\n        {isLoggedOut && (\n          <Grid item spacing={2} direction=\"column\" justify=\"center\">\n            <Grid item>\n              <Typography component=\"h1\" variant=\"h5\">\n                Sign up\n              </Typography>\n            </Grid>\n            <FormControl>\n              <TextField\n                required\n                label=\"Enter Your Email/Username\"\n                type=\"email\"\n                onChange={this.emailHandler}\n                aria-describedby=\"my-helper-text\"\n                variant=\"outlined\"\n              />\n              <FormHelperText id=\"my-helper-text\">\n                We'll never share your email.\n              </FormHelperText>\n            </FormControl>\n            <FormControl>\n              <TextField\n                required\n                label=\"Enter Your Password\"\n                type=\"password\"\n                id=\"my-input-password\"\n                onChange={this.passwordHandler}\n                aria-describedby=\"my-helper-text\"\n                variant=\"outlined\"\n              />\n            </FormControl>\n            <Button variant=\"contained\" onClick={this.authhandler}>\n              Signup\n            </Button>\n          </Grid>\n        )}\n\n        {isLoggedIn && (\n          <Navbar\n            dispatch={this.props.dispatch}\n            email={userEmail}\n            password={userPassword}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nfunction callback(state) {\n  return {\n    tasks: state.tasks,\n  };\n}\n\nconst connectedComponent = connect(callback)(App);\n\nexport default connectedComponent;\n","import { combineReducers } from \"redux\";\r\nimport { ALL_TASK, ADD_TASK, DELETE_TASK, SIGN_IN, SIGN_OUT } from \"../actions\";\r\n\r\nconst initialTaskState = {\r\n  list: [],\r\n  isLoggedIn: false,\r\n  isLoggedOut: true,\r\n};\r\n\r\nexport function tasks(state = initialTaskState, action) {\r\n  switch (action.type) {\r\n    case ALL_TASK:\r\n      return {\r\n        ...state,\r\n        list: action.tasks,\r\n      };\r\n\r\n    case SIGN_IN:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        isLoggedOut: false,\r\n      };\r\n\r\n    case SIGN_OUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        isLoggedOut: true,\r\n      };\r\n\r\n    case DELETE_TASK:\r\n      const filteredArray = state.list.filter(\r\n        (task) => task.id !== action.task.id\r\n      );\r\n      return {\r\n        ...state,\r\n        list: filteredArray,\r\n      };\r\n    case ADD_TASK: {\r\n      return {\r\n        ...state,\r\n        list: [action.task, ...state.list],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  tasks,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n\nconst logger = ({ dispatch, getState }) => (next) => (action) => {\n  console.log('ACTION', action);\n  next(action);\n};\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk));\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA6JNscZrxUljcJACkCub_JC0LyKFVfois\",\n  authDomain: \"reacttaskize.firebaseapp.com\",\n  databaseURL: \"https://reacttaskize.firebaseio.com\",\n  projectId: \"reacttaskize\",\n  storageBucket: \"reacttaskize.appspot.com\",\n  messagingSenderId: \"481880456843\",\n  appId: \"1:481880456843:web:b241d8bb33cfad85da9e8e\",\n  measurementId: \"G-NV0ZVPX9HK\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nReactDOM.render(\n<Provider store = {store}>\n<App /></Provider>, document.getElementById(\"root\"));\n"],"sourceRoot":""}